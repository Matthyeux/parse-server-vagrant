# -*- mode: ruby -*-
# vi: set ft=ruby :


SERVER_ADDRESS = "10.33.0.10" # PARSE SERVER ADDRESS
APPNAME = "appName" # YOUR APPNAME
APPID = "appId" # YOUR APPID
APIKEY = "1234567890" # YOUR API MASTERKEY FOR PARSE


# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
  
  config.vm.define "parse" do |parse|
    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://atlas.hashicorp.com/search.
    
    parse.vm.box = "bento/ubuntu-16.04"
    parse.vm.hostname = "parse-server"
    
    # Disable automatic box update checking. If you disable this, then
    # boxes will only be checked for updates when the user runs
    # `vagrant box outdated`. This is not recommended.
    # config.vm.box_check_update = false

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    # config.vm.network "forwarded_port", guest: 80, host: 8080

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    
    parse.vm.network "private_network", ip: "#{SERVER_ADDRESS}"

    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # config.vm.network "public_network"

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    
    parse.vm.synced_folder "./sources", "/vagrant_data", create: true, type: "rsync"

    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # Example for VirtualBox:
    #
    parse.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
    end
    #
    # View the documentation for the provider you are using for more
    # information on available options.

    # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
    # such as FTP and Heroku are also available. See the documentation at
    # https://docs.vagrantup.com/v2/push/atlas.html for more information.
    # config.push.define "atlas" do |push|
    #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
    # end

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    parse.vm.provision "shell", name: "prerequisites", inline: <<-SHELL
      apt-get update

      echo "Installing Nodejs and NPM"
      curl -sL https://deb.nodesource.com/setup_6.x -o nodesource_setup.sh 
      bash nodesource_setup.sh
    
      apt-get -y install nodejs
      apt-get -y install build-essential

      echo "Installing mongoDB"
      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
      echo "deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list
      apt-get update
      apt-get -y install mongodb-org
      cp /vagrant_data/mongodb.service /etc/systemd/system/mongodb.service
      systemctl start mongodb
      systemctl enable mongodb
    SHELL
    parse.vm.provision "shell", name: "parse-server", inline: <<-SHELL
      cd /srv/ && git clone https://github.com/ParsePlatform/parse-server
      cd /srv/parse-server && npm install && npm run build
    SHELL
    parse.vm.provision "shell", name: "parse-dashboard", inline: <<-SHELL
      cd /srv/ && git clone https://github.com/ParsePlatform/parse-dashboard
      cd /srv/parse-dashboard && npm install && npm run prepublish
    SHELL
    parse.vm.provision "shell", name: "parse-cloud", inline: <<-SHELL
      mkdir -p /srv/parse-cloud
      cp /vagrant_data/parse-cloud.js /srv/parse-cloud/main.js
    SHELL
    parse.vm.provision "shell", :args => [SERVER_ADDRESS, APPID, APIKEY, APPNAME], name: "parse-project", inline: <<-SHELL
      mkdir -p /srv/parse-project && cd /srv/parse-project
      npm -y init && npm install --save express

      sed -i "s/V_APPID/$2/g" /vagrant_data/parse-server.js
      sed -i "s/V_APIKEY/$3/g" /vagrant_data/parse-server.js
      sed -i "s/V_SERVER_ADDRESS/$1/g" /vagrant_data/parse-server.js
      sed -i "s/V_APPNAME/$4/g" /vagrant_data/parse-server.js

      cp /vagrant_data/parse-server.js /srv/parse-project/app.js
      cp /vagrant_data/parse-server.service /etc/systemd/system/parse-server.service
      
      adduser --disabled-login --system --group  --no-create-home --quiet parse
      chown -R parse:parse /srv/*
      systemctl start parse-server
      systemctl enable parse-server
    SHELL
  end
end
